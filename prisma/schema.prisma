generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  password     String
  firstName    String
  lastName     String
  role         String        @default("user")
  accounts     Account[]
  transactions Transaction[]
  categories   Category[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("users")
}

model Account {
  id           String        @id @default(uuid())
  name         String
  type         String
  balance      Decimal       @default(0) @db.Decimal(10, 2)
  userId       String
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("accounts")
}

model Category {
  id           String        @id @default(uuid())
  name         String
  description  String?
  parentId     String?
  parent       Category?     @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children     Category[]    @relation("CategoryHierarchy")
  color        String?
  icon         String?
  budgetAmount Decimal?      @db.Decimal(10, 2)
  userId       String
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("categories")
}

model Transaction {
  id            String   @id @default(uuid())
  amount        Decimal  @db.Decimal(10, 2)
  type          String
  description   String
  date          DateTime
  paymentMethod String?
  attachment    String?
  userId        String
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  accountId     String
  account       Account  @relation(fields: [accountId], references: [id], onDelete: Cascade)
  categoryId    String
  category      Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("transactions")
}
